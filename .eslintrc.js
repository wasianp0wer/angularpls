module.exports = {
  root: true,
  overrides: [
    {
      files: ['*.ts'],
      extends: [
        'eslint:recommended',
        'plugin:@typescript-eslint/eslint-recommended',
        'plugin:@typescript-eslint/recommended',
        'plugin:@typescript-eslint/recommended-requiring-type-checking',
        'plugin:prettier/recommended',
      ],
      parser: '@typescript-eslint/parser',
      parserOptions: {
        project: ['src/tsconfig.app.json'],
        tsconfigRootDir: __dirname,
        sourceType: 'module',
      },
      rules: {
        'simple-import-sort/imports': 'error',
        'simple-import-sort/exports': 'off',
        'import/first': 'error',
        'import/newline-after-import': 'off',
        'import/no-duplicates': 'error',
        'unused-imports/no-unused-imports': 'error',
        'prettier/prettier': 'error',
        '@typescript-eslint/explicit-function-return-type': 'off',
        '@typescript-eslint/no-use-before-define': 'off',
        '@typescript-eslint/no-unnecessary-type-assertion': 'off',
        '@typescript-eslint/prefer-regexp-exec': 'off',
        '@typescript-eslint/no-explicit-any': 'off',
        '@typescript-eslint/require-await': 'off',
        '@typescript-eslint/no-non-null-assertion': 'off',
        '@typescript-eslint/no-loss-of-precision': 'off',
        '@typescript-eslint/restrict-plus-operands': 'off',
        '@typescript-eslint/restrict-template-expressions': 'off',
        '@typescript-eslint/no-unsafe-assignment': 'off',
        '@typescript-eslint/no-unsafe-call': 'off',
        '@typescript-eslint/no-unsafe-member-access': 'off',
        '@typescript-eslint/no-unsafe-return': 'off',
        '@typescript-eslint/no-unsafe-argument': 'off',
        '@typescript-eslint/no-floating-promises': 'off',
        '@typescript-eslint/no-inferrable-types': 'off',
        '@typescript-eslint/no-empty-function': 'warn',
        '@typescript-eslint/no-namespace': 'off',
        'no-case-declarations': 'off',
        'no-useless-escape': 'off',
        'no-empty': 'off',
        'no-extra-boolean-cast': 'off',
        'spaced-comment': 'warn',
        'no-multiple-empty-lines': 'warn',
        curly: 'warn',
        'eol-last': 'error',
        indent: [
          'off',
          2,
          {
            SwitchCase: 1,
            VariableDeclarator: 'first',
          },
        ],
        'array-bracket-newline': ['error', 'consistent'],
        'no-implicit-globals': 'error',
        'no-console': ['warn', { allow: ['error'] }],
        'no-shadow-restricted-names': ['error'],
        'no-trailing-spaces': ['error'],
        'sort-keys': 0,
        'no-bitwise': 'off',
        'no-mixed-operators': [
          'warn',
          {
            groups: [
              ['??', '||'],
              ['??', '&&'],
              ['??', '+'],
              ['??', '-'],
              ['??', '*'],
              ['??', '/'],
              ['??', '%'],
              ['??', '**'],
              ['??', '=='],
              ['??', '!='],
              ['??', '==='],
              ['??', '!=='],
              ['??', '>'],
              ['??', '>='],
              ['??', '<'],
              ['??', '<='],
              ['||', '&&'],
              ['||', '+'],
              ['||', '-'],
              ['||', '*'],
              ['||', '/'],
              ['||', '%'],
              ['||', '**'],
            ],
            allowSamePrecedence: true,
          },
        ],
      },
      plugins: ['@typescript-eslint', 'prefer-arrow', 'prettier', 'simple-import-sort', 'import', 'unused-imports'],
    },
  ],
};
